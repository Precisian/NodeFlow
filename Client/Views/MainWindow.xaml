<Window x:Class="Client.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client.Views"
        xmlns:vm="clr-namespace:Client.ViewModels"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" Height="600" Width="800">

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem x:Name="File_Project_New" Header="새 프로젝트" Command="{Binding NewProjectCommand}"/>
                <MenuItem x:Name="File_Project_Load" Header="불러오기" Command="{Binding LoadProjectCommand}"/>
                <MenuItem x:Name="File_Project_Save" Header="저장하기" Command="{Binding SaveProjectCommand}"/>
                <MenuItem x:Name="File_Exit" Header="종료" Command="{Binding ExitApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <!-- 노드 추가 버튼은 이제 Click 이벤트를 사용합니다. -->
                <MenuItem x:Name="Edit_Node_Add" Header="노드 추가" Click="AddNodeButton_Click" IsEnabled="{Binding IsProjectOpen}"/>
                <MenuItem x:Name="Edit_Node_Sub" Header="노드 삭제" Command="{Binding RemoveNodeCommand}"/>
                <MenuItem x:Name="Edit_Node_Manage" Header="노드 목록" Command="{Binding ManageNodesCommand}"/>
            </MenuItem>
            <MenuItem Header="Project">
                <MenuItem x:Name="Project_Properties" Header="추가 속성 목록" Command="{Binding ShowPropertiesCommand}"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="도움말" Command="{Binding ShowHelpCommand}"/>
            </MenuItem>
        </Menu>
        <Grid x:Name="grid_frame" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                <ScrollViewer Margin="5" Grid.Column="0"
                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              Background="Transparent">
                    <Canvas x:Name="mainCanvas"
                            Background="White"
                            Width="{Binding CanvasWidth}"
                            Height="{Binding CanvasHeight}"
                            MouseLeftButtonDown="Canvas_MouseLeftButtonDown"
                            MouseLeftButtonUp="Canvas_MouseLeftButtonUp"
                            MouseMove="MainCanvas_MouseMove"
                            MouseWheel="MainCanvas_MouseWheel"
                            MouseRightButtonDown="MainCanvas_MouseRightButtonDown"
                            MouseRightButtonUp="MainCanvas_MouseRightButtonUp">

                        <!-- 링크 선 그리기 (노드보다 먼저 그려져야 노드 뒤에 가려지지 않음) -->
                        <ItemsControl ItemsSource="{Binding Links}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Line X1="{Binding StartPoint.X}"
                                          Y1="{Binding StartPoint.Y}"
                                          X2="{Binding EndPoint.X}"
                                          Y2="{Binding EndPoint.Y}"
                                          Stroke="Black"
                                          StrokeThickness="2" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- 노드 렌더링 -->
                        <ItemsControl ItemsSource="{Binding Nodes}">
                            <!-- 노드들이 Canvas의 좌표를 따르도록 ItemsPanel을 Canvas로 변경합니다. -->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <!-- Canvas.Left와 Canvas.Top을 NodeViewModel의 속성에 직접 바인딩합니다. -->
                                    <Setter Property="Canvas.Left" Value="{Binding XPosition}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding YPosition}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:Node NodeHeaderColor="{Binding NodeHeaderColor}"
                                                TaskName="{Binding TaskName}"
                                                StartDate="{Binding StartDate}"
                                                EndDate="{Binding EndDate}"
                                                Assignee="{Binding Assignee}">
                                        <!-- 💡 노드 자체에 LayoutTransform 적용 -->
                                        <local:Node.LayoutTransform>
                                            <ScaleTransform ScaleX="{Binding NodeScale}" ScaleY="{Binding NodeScale}" />
                                        </local:Node.LayoutTransform>
                                    </local:Node>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <Canvas.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding Scale}" ScaleY="{Binding Scale}" />
                                <TranslateTransform X="{Binding OffsetX}" Y="{Binding OffsetY}" />
                            </TransformGroup>
                        </Canvas.RenderTransform>
                    </Canvas>
                </ScrollViewer>
            </Border>
            <!-- 고정 버튼 층 (캔버스 위에 겹쳐서 위치) -->
            <StackPanel Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="15" Orientation="Horizontal">
                <!-- 이 버튼의 IsEnabled 속성을 IsProjectOpen에 직접 바인딩하여 활성/비활성 상태를 제어합니다. -->
                <Button x:Name="AddNodeButton" Content="노드 추가" Click="AddNodeButton_Click" Width="60" Margin="5,0,5,0"
                        IsEnabled="{Binding IsProjectOpen}"/>
                <Button Content="뷰 리셋" Command="{Binding ResetViewCommand}" Width="60" Margin="5,0,5,0"/>
            </StackPanel>
            <Grid Grid.Column="1" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <GroupBox x:Name="GroupBox_Basic" Grid.Row="0" Header="기본 속성">
                    <DataGrid ItemsSource="{Binding SelectedNode.BasicProperties}" AutoGenerateColumns="False" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="형식" Binding="{Binding Name}" Width="*"/>
                            <DataGridTextColumn Header="내용" Binding="{Binding Value}" Width="1.75*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
                <GroupBox x:Name="GroupBox_Properties" Grid.Row="1" Header="추가 속성">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <DataGrid ItemsSource="{Binding SelectedNode.AdditionalProperties}" AutoGenerateColumns="False" CanUserAddRows="True" Grid.Row="0">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="형식" Width="*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.ComboBoxItems}"
                                                      SelectedItem="{Binding SelectedValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="내용" Binding="{Binding Content}" Width="2*"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Button Content="삭제" Grid.Column="1" Margin="5" Command="{Binding DeletePropertiesCommand}"/>
                        </Grid>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
